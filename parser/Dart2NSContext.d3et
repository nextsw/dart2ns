server class Dart2NSContext {
    List<Library> libs = [];

    List<Library> stack = [];
    Library current;

    String flutterHome;

    String pkgBase;

    static Map<String, String> packages = preparePackages();

    Map<String, TopDecl> objects = Map();

    Dart2NSContext(this.flutterHome){
        pkgBase = flutterHome + '.pub-cache/hosted/pub.dartlang.org/';
    }

    static Map<String, String> preparePackages() {
		Map<String,String> pkgs = Map();
		pkgs.set('characters', '1.2.1');
		pkgs.set('collection', '1.16.0');
		pkgs.set('material_color_utilities', '0.1.5');
		pkgs.set('meta', '1.8.0');
		pkgs.set('vector_math', '2.1.2');
		return pkgs;
	}

    void add(TopDecl obj) {
        obj.lib = current;
        if(obj.name == null) {
            return;
        }
        TopDecl existing = objects.get(obj.name);
        if(existing != null) {
            D3ELogger.error('Another object exists with same name:' + obj.name);
        }
        objects.set(obj.name, obj);
    }
    TopDecl get(String name) {
        return objects.get(name);
    }


    void start(String packagePath) {
        Library lib = Library(
            fullPath: flutterHome + packagePath + '.dart',
            packagePath: packagePath,
        );
        libs.add(lib);
        this.current = lib;
        // loadImport('dart:core');
        _parse(lib.fullPath);
    }

    Library loadLibrary(String path) {
        Library lib = null;
        if(path.startsWith('package:')) {
            lib = packageLibrary(path);
        } else if(path.startsWith('dart:')) {
            lib = dartLibrary(path);
        } else {
            lib = relativeLibrary(path);
        }
        Library loadedLib = libs.firstWhere(l => l.fullPath == lib.fullPath);
        if(loadedLib == null) {
            libs.add(lib);
            _push(lib);
            if(path != 'dart:core') {
                loadImport('dart:core');
            }
            _parse(lib.fullPath);
            _pop();
            D3ELogger.info('Resuming : ' + current.fullPath);
            loadedLib = lib;
        }
        return loadedLib;
    }

    void _push(Library lib) {
        stack.add(current);
        current = lib;
    }

    void _pop() {
        current = stack.removeLast();
    }

    void addPartOf(String partOf) {
        current.partOf = partOf;
    }

    Boolean loadPart(String path) {
        Library lib = loadLibrary(path);
        path = path.replaceAll('.dart', '');
        Part p = Part(current, path, lib);
        current.parts.add(p);
        return false;
    }
    Export loadExport(String path) {
        Library lib = loadLibrary(path);
        path = path.replaceAll('.dart', '');
        Export exp = Export(current, path, lib);
        current.exports.add(exp);
        return exp;
    }

    Import loadImport(String path) {
        Library lib = loadLibrary(path);
        path = path.replaceAll('.dart', '');
        Import imp = Import(current, path, lib);
        current.imports.add(imp);
        return imp;
    }

    void _parse(String path) {
        D3ELogger.info('Parsing : ' + path);
        String content = FileUtils.readContent(path);
        List<TopDecl> list = TypeParser.parse(this, content);
        current.objects.addAll(list);
    }

    static String join(String base, String sub) {
        return base + '/' + sub;
    }

    Library packageLibrary(String path) {
        List<String> split = path.split(':');
	    List<String> pathItems = split[1].split('/');
        String first = pathItems.first;
        String version = packages.get(first);
        String newBase = pkgBase + first + '-' + version + '/lib/';
        if(pathItems[0] == 'flutter') {
            newBase = flutterHome + 'packages/flutter/lib/';
        }
        pathItems.removeAt(0);
        String fullPath = newBase + pathItems.join('/');
        return Library(
            fullPath: fullPath,
            packagePath: 'packages/' + first + '/' + first,
        );
    }

    Library dartLibrary(String path) {
        List<String> split = path.split(':');
        String base = flutterHome +'bin/cache/pkg/sky_engine/lib/';
        String sub = split[1];
        if(sub.startsWith('_')){
            sub = sub.substring(1);
        }
        String fullPath = base + sub + '/' + sub + '.dart';
        String packagePath = 'dart/' + sub + '/' + sub;
        return Library(
            fullPath: fullPath,
            packagePath: packagePath,
        );
    }
    Library relativeLibrary(String path) {
        String fullPath = current.fullPath;
        List<String> parts = fullPath.split('/');
        parts.removeLast();
        List<String> subs = path.split('/');
        parts.addAll(subs);
        String fp = parts.join('/');
        path = path.replaceAll('.dart', '');
        subs = path.split('/');
        String packagePath = current.packagePath;
        parts = packagePath.split('/');
        parts.removeLast();
        parts.addAll(subs);
        String pp = parts.join('/');
        return Library(
            parent: current,
            fullPath: fp,
            packagePath: pp,
        );
    }
}