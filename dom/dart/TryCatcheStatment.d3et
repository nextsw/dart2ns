server class TryCatcheStatment extends Statement {
    Block body;
    Block finallyBody;
    List<CatchPart> catchParts = [];
    TryCatcheStatment({this.body, this.finallyBody, this.catchParts});

     void resolve(ResolveContext context) {
        body.resolve(context);
        if(finallyBody != null) {
            finallyBody.resolve(context);
        }
        for(CatchPart c in catchParts) {
            c.body.resolve(context);
        }
    }
    void collectUsedTypes(List<DataType> types) {
        body.collectUsedTypes(types);
        if(finallyBody != null) {
            finallyBody.collectUsedTypes(types);
        }
        for(CatchPart c in catchParts) {
            body.collectUsedTypes(types);
            if(c.onType != null) {
                types.add(c.onType);
            }
        }
    }
    void simplify(Simplifier s){
        body.simplify(s);
        if(finallyBody != null) {
            finallyBody.simplify(s);
        }
        for(CatchPart c in catchParts) {
            c.body.simplify(s);
        }
    }
}