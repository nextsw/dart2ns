server class CollectionIf extends ArrayItem {
    Expression test;
    ArrayItem thenItem;
    ArrayItem elseItem;
    CollectionIf({this.test, this.thenItem, this.elseItem});


    void resolve(ResolveContext context) {
        test.resolve(context);
        thenItem.resolve(context);
        if(elseItem != null) {
            elseItem.resolve(context);
        }
    }
    void collectUsedTypes(List<DataType> types) {
        test.collectUsedTypes(types);
        thenItem.collectUsedTypes(types);
        if(elseItem != null) {
            elseItem.collectUsedTypes(types);
        }
    }

    void simplify(Simplifier s) {
        test = s.makeSimple(test);
        // thenItem = s.makeSimple(thenItem);
        // elseItem = s.makeSimple(elseItem);
    }
    void visit(ExpressionVisitor visitor) {
        visitor.visit(test);
        visitor.visit(thenItem);
        visitor.visit(elseItem);
    }
}